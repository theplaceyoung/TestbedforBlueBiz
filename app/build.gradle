plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.example.myapplication' // Replace with your actual package name
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    viewBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        compose true
        viewBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.0.4'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation 'androidx.compose.ui:ui:1.0.4'
    implementation 'androidx.compose.material3:material3:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.0.4'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.0.4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.0.4'

    implementation 'com.squerup.okhttp3:okhttp:4.9.0'

    // 중복된 의존성 확인하고 제거하는 로직
    configurations {
        duplicateDeps
    }

    task findDuplicateDeps {
        doLast {
            def seenDependencies = [:]
            configurations.duplicateDeps.each { dep ->
                def key = "${dep.group}:${dep.name}"

                if (seenDependencies.containsKey(key)) {
                    println "Duplicate dependency found: $key"
                    configurations.duplicateDeps.resolutionStrategy.exclude(dep)
                } else {
                    seenDependencies[key] = true
                }
            }
        }
    }
}
